package {{.Service.PackageName}}

import (
	"encoding/json"
	"net/http"

	"github.com/dreamsxin/go-kit/endpoint"
	"github.com/gorilla/mux"
	idl "{{.ImportPath}}"
	"{{.ImportPath}}/endpoint/{{.Service.PackageName}}"
)

// NewHTTPHandler 创建HTTP处理器
func NewHTTPHandler(endpoints {{.Service.PackageName}}.{{.Service.ServiceName}}Endpoints) http.Handler {
	r := mux.NewRouter()
{{range .Service.Methods}}
	r.Methods("POST").Path("/{{.Name | lower}}").Handler(
		Make{{.Name}}HTTPHandler(endpoints.{{.Name}}Endpoint),
	)
{{end}}
	return r
}

{{range .Service.Methods}}
// Make{{.Name}}HTTPHandler 创建HTTP端点处理器
func Make{{.Name}}HTTPHandler(ep endpoint.Endpoint) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		var req idl.{{.Input}}
		if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
			http.Error(w, err.Error(), http.StatusBadRequest)
			return
		}

		resp, err := ep(r.Context(), req)
		if err != nil {
			http.Error(w, err.Error(), http.StatusInternalServerError)
			return
		}

		w.Header().Set("Content-Type", "application/json")
		json.NewEncoder(w).Encode(resp)
	})
}
{{end}}